name: Build and Release Desktop Apps

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Windows app
        run: npm run electron:build:win
        
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            dist-electron/*.exe
            dist-electron/*.exe.blockmap
            dist-electron/latest.yml

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build macOS app
        run: npm run electron:build:mac
        
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: |
            dist-electron/*.dmg
            dist-electron/*.dmg.blockmap
            dist-electron/latest-mac.yml

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build Linux app
        run: npm run electron:build:linux
        
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: |
            dist-electron/*.AppImage
            dist-electron/latest-linux.yml

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            windows-installer/*
            macos-installer/*
            linux-installer/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
